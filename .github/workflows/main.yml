name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip python3-pip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev \
          build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev openssl libgdbm-dev \
          libgdbm-compat-dev liblzma-dev libreadline-dev uuid-dev libjpeg-dev libpng-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython==0.29.33
          pip install -r requirements.txt

      - name: Cache Buildozer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.buildozer
            ~/.gradle
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: Build with Buildozer
        run: |
          export PATH="$PATH:~/.local/bin"
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: PDFEditor-debug-apk
          path: bin/*.apk
