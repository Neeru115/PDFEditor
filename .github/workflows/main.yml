name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip python3-pip autoconf libtool pkg-config \
          zlib1g-dev cmake libffi-dev libssl-dev \
          build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev openssl libgdbm-dev \
          libgdbm-compat-dev liblzma-dev libreadline-dev uuid-dev libjpeg-dev libpng-dev \
          libxml2-dev libxslt-dev libncurses-dev

      - name: Install Android SDK
        run: |
          mkdir -p ~/android-sdk
          cd ~/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          rm cmdline-tools.zip
          
          # Create proper directory structure
          mv cmdline-tools tmp-tools
          mkdir -p cmdline-tools
          mv tmp-tools cmdline-tools/latest
          
          # Set environment variables
          export ANDROID_HOME=~/android-sdk
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
          
          # Create licenses directory
          mkdir -p $ANDROID_HOME/licenses
          echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license
          echo -e "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license
          echo -e "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license
          
          # Install required components
          sdkmanager --install "platform-tools"
          sdkmanager --install "platforms;android-34"
          sdkmanager --install "build-tools;36.0.0"
          
          # Verify installation
          sdkmanager --list_installed
          
          # Add to PATH for subsequent steps
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/36.0.0" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user buildozer cython==0.29.33
          python -m pip install -r requirements.txt
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache Buildozer dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.buildozer
            ~/.gradle
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: Build with Buildozer
        run: |
          # Get Java home from installed JDK
          JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
          echo "Using JAVA_HOME: $JAVA_HOME"
          
          # Force accept all licenses
          mkdir -p "$ANDROID_HOME/licenses"
          echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_HOME/licenses/android-sdk-license"
          echo -e "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
          echo -e "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$ANDROID_HOME/licenses/android-sdk-license"
          
          # Build with debug output
          python -m buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: PDFEditor-debug-apk
          path: bin/*.apk
